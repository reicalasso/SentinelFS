Stabilize networking core – add inbound listeners, integrate receive flows, make NAT discovery actually resolve hostnames, and clean up discovery socket lifecycle.
Fix security primitives – use reusable session keys, repair signing/verification, preload legitimate peer certificates, and ensure secure transfers really encrypt/decrypt file data.
Complete the sync pipeline – feed received deltas into DeltaEngine::apply, replace the simulated logic in SyncManager, and hook up selective sync, throttling, resume, and version history so they do real work.
Improve filesystem watcher – guard thread shutdown, watch subdirectories, and capture real hashes/sizes before writing to the DB.
Populate database features – start using transactions, batch APIs, stats, and conflict metadata so the schema matches runtime behavior.
Bring ML features to life – swap placeholder heuristics for thin-but-real models or rule-based logic that actually influences sync/security, and stream real data into the online learners.
Align documentation with reality – refresh README and docs so advertised features exist or are clearly marked as roadmap.
Add GUI integration – wire runtime stats into the GTK UI and harden --gui argument handling.
Introduce automated testing – stand up unit/integration coverage for security, networking, and sync, plus a CI entry point to run them.
Polish build quality – eliminate the current warnings, add lint/static checks, and make sure every thread has a graceful shutdown path.
