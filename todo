# ✅ SentinelFS-Neo — Full Development To-Do List

> **Durum Anahtarı:**  
> 🟥 Kritik 🟧 Önemli 🟨 Orta 🟩 İyileştirme

---

## 🧠 Networking Core

-    🟥 **Inbound listener ekle** — TCP acceptor oluştur, peer bağlantılarını dinle.
    
-    🟥 **Receive flow entegrasyonu** — `receiveDelta` ve `receiveFile` çağrılarını aktif hale getir.
    
-    🟧 **NAT discovery düzelt** — `stun.l.google.com` için DNS çözümleme ekle (şu an `inet_pton`’a direkt hostname veriliyor).
    
-    🟧 **Discovery socket yaşam döngüsünü temizle** — `Discovery::stop` sonrası socket race ve descriptor leak problemlerini çöz.
    

---

## 🔐 Security Primitives

-    🟥 **Session key yeniden kullanılabilir yap** — AES anahtarı sabit olmalı; encrypt/decrypt karşılıklı çalışmalı.
    
-    🟥 **RSA imzalama/signer düzelt** — `EVP_PKEY` bağlanmalı; `signData/verifySignature` artık sessizce başarısız olmamalı.
    
-    🟥 **Gerçek peer sertifikalarını yükle** — `addPeerCertificate` çağrıları eklenecek, sertifika kontrolü gerçek veriyle yapılacak.
    
-    🟥 **Gerçek şifreleme/deşifreleme uygula** — `sendSecureFile` plaintext göndermemeli, `receiveSecureFile` de decrypt etmeli.
    
-    🟧 **Rate-limit UB düzelt** — `erase(it)` sonrası iterator kullanımı tanımsız davranış; yeniden yazılmalı.
    

---

## 🔁 Sync Pipeline

-    🟥 **DeltaEngine::apply bağla** — alınan delta’lar dosya sistemine uygulanmalı.
    
-    🟥 **SyncManager işlevselleştir** — counters yerine gerçek IO işlemleri başlatılmalı.
    
-    🟧 **Selective sync, resume, versioning aktif et** — dummy objeler gerçek senkronizasyonla bağlanmalı.
    
-    🟨 **Throttle mekanizması ekle** — ağ ve disk yüküne göre hız sınırı getir.
    

---

## 🗂️ Filesystem Layer

-    🟥 **Watcher shutdown koruması** — `watchThread.join()` öncesi thread varlığı kontrol edilmeli.
    
-    🟧 **Alt dizin izleme ekle** — recursive inotify veya FS watcher ile alt klasörleri kapsa.
    
-    🟧 **Gerçek hash/sizes hesapla** — DB’ye yazmadan önce SHA256 ve dosya boyutlarını al.
    
-    🟨 **Delta generation geliştir** — “tam dosya gönder” yaklaşımını fark bazlı aktarım ile değiştir.
    

---

## 🧱 Database Layer

-    🟧 **Transaction & batch API kullanımı** — DB işlemlerini atomik hale getir.
    
-    🟧 **Stats ve conflict metadata doldur** — runtime davranışı DB şemasıyla hizala.
    
-    🟥 **Hash/conflict kolonlarını gerçek verilerle doldur** — delta tespiti ve conflict çözümü için zorunlu.
    
-    🟨 **Dead code temizliği** — `DEAD_CODE_ANALYSIS.md` altındaki kullanılmayan modülleri kaldır.
    

---

## 🧬 Machine Learning Layer

-    🟧 **Placeholder heuristics yerine gerçek modeller ekle** — minimal kural tabanlı veya küçük ML modelleriyle başla.
    
-    🟧 **Online/federated modülleri etkinleştir** — veri akışı ve prediction feedback’i aktif et.
    
-    🟨 **Model dosyaları yükleme & eğitim pipeline’ı başlat** — dummy verilerle temel eğitimi çalıştır.
    

---

## 🪟 GUI Integration

-    🟧 **Runtime data bağla** — `updateFileList`, `updatePeerList` fonksiyonlarını CLI/daemon çıktısına bağla.
    
-    🟨 **\--gui argüman parser’ını düzelt** — argv shifting yerine argparse benzeri güvenli yöntem kullan.
    

---

## 🧪 Testing & Tooling

-    🟥 **Unit & integration test altyapısı kur** — security, networking ve sync modülleri için kapsam oluştur.
    
-    🟧 **CI/CD pipeline ekle** — GitHub Actions veya CMake test runner ile temel entegrasyon kur.
    
-    🟧 **Lint & static analiz ekle** — `clang-tidy`, `cppcheck`, `clang-format` entegre et.
    

---

## 🧰 Build & Quality

-    🟩 **Derleme uyarılarını temizle** — `ML_FORECAST_INTERVAL` unused warning düzelt.
    
-    🟧 **Her thread için graceful shutdown path ekle** — join + timeout koruması ile düzgün kapanma sağla.
    

---

## 📖 Documentation

-    🟧 **README’yi gerçek duruma uyarla** — eksik modülleri “roadmap” olarak işaretle.
    
-    🟧 **Docs’ları revize et** — SQLite maintenance & conflict resolution bölümlerini güncel koda uygun hale getir.
    
-    🟩 **Roadmap bölümü ekle** — eksik modüller için kilometre taşları tanımla.
    

---

## 🧭 Roadmap & Strategy

-    🟧 **Feature downscope kararı al** — `auto-remesh`, `secure transfer`, `AI anomaly detection` gibi vaatleri yeniden değerlendir.
    
-    🟥 **Security fix’leri önceliklendir** — veri alışverişinden önce güvenlik temellerini tamamla.
    
-    🟧 **Kabul test harness’ı ekle** — minimum senaryoları CI’da çalıştıracak framework kur.
    

---

## 📊 Progress Summary (güncellenecek)

| Alan | Görev Sayısı | Durum |
| --- | --- | --- |
| Networking | 4 | ⏳ |
| Security | 5 | ⏳ |
| Sync | 4 | ⏳ |
| Filesystem | 4 | ⏳ |
| Database | 4 | ⏳ |
| ML | 3 | ⏳ |
| GUI | 2 | ⏳ |
| Testing | 3 | ⏳ |
| Build | 2 | ⏳ |
| Docs | 3 | ⏳ |
| Strategy | 3 | ⏳ |
| **Toplam** | **37 Görev** | **0/37 tamamlandı** |

---